{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO8ICiPChfmtCdTOmyufBhb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"QrLwWLkxpO58"},"outputs":[],"source":["import sqlite3"]},{"cell_type":"code","source":["try:\n","    db = sqlite3.connect('Northwind.db')\n","    print('Connection succesful!')\n","except:\n","    print('Connection error!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LokAWZqHpv0s","executionInfo":{"status":"ok","timestamp":1694526567311,"user_tz":180,"elapsed":434,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"0ef132bb-2e58-4fc3-ea2f-7a60b302ea61"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Connection succesful!\n"]}]},{"cell_type":"code","source":["# create a cursor object for interacting with the database\n","cursor = db.cursor()\n","\n","# define a SQL query to select the names of all tables in the SQLite database\n","query1 = '''SELECT Name\n","            FROM sqlite_master\n","            WHERE type='table';'''\n","\n","# execute the SQL query using the cursor\n","cursor.execute(query1)\n","\n","# fetch all the results from the executed query and store them in the 'out' variable\n","out = cursor.fetchall()\n","\n","# return the result obtained from the database query\n","out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lzjUHnCXp5N0","executionInfo":{"status":"ok","timestamp":1694526614342,"user_tz":180,"elapsed":343,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"838840d5-b4dd-432f-d7e7-baa4da2c6ea7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('Categories',),\n"," ('sqlite_sequence',),\n"," ('CustomerCustomerDemo',),\n"," ('CustomerDemographics',),\n"," ('Customers',),\n"," ('Employees',),\n"," ('EmployeeTerritories',),\n"," ('Order Details',),\n"," ('Orders',),\n"," ('Products',),\n"," ('Regions',),\n"," ('Shippers',),\n"," ('Suppliers',),\n"," ('Territories',)]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# listing items from a specific table\n","\n","query2 =  '''\n","          PRAGMA TABLE_INFO(Products)\n","          ;'''\n","\n","cursor.execute(query2)\n","out=cursor.fetchall()\n","out\n","\n","# structure of response:\n","# index, name, type, notnull, dflt_value, pk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MSp7E0QcrDDc","executionInfo":{"status":"ok","timestamp":1694526898743,"user_tz":180,"elapsed":328,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"80bc7b1f-07e9-4025-a84f-7da87346b5bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(0, 'ProductID', 'INTEGER', 1, None, 1),\n"," (1, 'ProductName', 'TEXT', 1, None, 0),\n"," (2, 'SupplierID', 'INTEGER', 0, None, 0),\n"," (3, 'CategoryID', 'INTEGER', 0, None, 0),\n"," (4, 'QuantityPerUnit', 'TEXT', 0, None, 0),\n"," (5, 'UnitPrice', 'NUMERIC', 0, '0', 0),\n"," (6, 'UnitsInStock', 'INTEGER', 0, '0', 0),\n"," (7, 'UnitsOnOrder', 'INTEGER', 0, '0', 0),\n"," (8, 'ReorderLevel', 'INTEGER', 0, '0', 0),\n"," (9, 'Discontinued', 'TEXT', 1, \"'0'\", 0)]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# showing some data from Employees table\n","\n","query3 =  '''\n","          SELECT  EmployeeId, Firstname, Lastname\n","          FROM Employees\n","          LIMIT 100\n","          ;'''\n","\n","\n","cursor.execute(query3)\n","out=cursor.fetchall()\n","out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B5GfF1LArWt9","executionInfo":{"status":"ok","timestamp":1694527235846,"user_tz":180,"elapsed":374,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"76a3dd76-9a0d-4bfa-c37b-3fb8eafd1276"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(1, 'Nancy', 'Davolio'),\n"," (2, 'Andrew', 'Fuller'),\n"," (3, 'Janet', 'Leverling'),\n"," (4, 'Margaret', 'Peacock'),\n"," (5, 'Steven', 'Buchanan'),\n"," (6, 'Michael', 'Suyama'),\n"," (7, 'Robert', 'King'),\n"," (8, 'Laura', 'Callahan'),\n"," (9, 'Anne', 'Dodsworth')]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# listing discontinued products with their categories\n","\n","query4 =  '''\n","          select distinct b.*, a.CategoryName\n","          from Categories a\n","          inner join Products b on a.CategoryID = b.CategoryID\n","          where b.Discontinued = '1'\n","          ;'''\n","\n","cursor.execute(query4)\n","out=cursor.fetchall()\n","out"],"metadata":{"id":"JBJ7_Prfsayd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# creating Client table using API\n","\n","import sqlite3\n","\n","bank = sqlite3.connect('base.db')\n","cursor = bank.cursor()\n","cursor.execute('CREATE TABLE clientes (id text , pnome text, unome text, email text,age int)')  # creates table in bank\n","bank.commit()  # saves it\n","\n","\n","import requests\n","response = requests.get(\"https://randomuser.me/api/\").json()\n","\n","# show random values obtained and their respective locations\n","print(response['results'][0])\n","\n","# obtain data for 20 clients:\n","for i in range(20):\n","    response = requests.get(\"https://randomuser.me/api/\").json()\n","    identif=response['results'][0]['id']['value']\n","    primeiro_nome=response['results'][0]['name']['first']\n","    ultimo_nome=response['results'][0]['name']['last']\n","    email=response['results'][0]['email']\n","    idade=int(response['results'][0]['dob']['age'])\n","\n","    if not (identif is None):\n","        # insert values\n","        cursor.execute('INSERT INTO clientes VALUES (\"'+ identif+'\",\"'+ primeiro_nome+'\",\"'+ultimo_nome+'\",\"'+email +'\",'+str(idade)+')' )\n","\n","\n","bank.commit()  # save data"],"metadata":{"id":"NE1mTPfSs0PL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["query = '''\n","        SELECT  * FROM clientes\n","        ;'''\n","\n","cursor.execute(query)\n","out=cursor.fetchall()\n","print(out)\n","\n","\n","# obtain average age, directly through SQL\n","\n","query =   '''\n","          SELECT  avg(age) FROM clientes\n","          ;'''\n","\n","cursor.execute(query)\n","out=cursor.fetchall()\n","print(out)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jejLlb5OuB7c","executionInfo":{"status":"ok","timestamp":1694527740772,"user_tz":180,"elapsed":12,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"08037e5c-218d-4f58-e577-1e13d31d6342"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[('06293182-C', 'Ana', 'Herrera', 'ana.herrera@example.com', 75), ('210814882245', 'Nakul', 'Holla', 'nakul.holla@example.com', 73), ('GC 14 59 75 A', 'Morris', 'Ortiz', 'morris.ortiz@example.com', 51), ('667128347', 'Francisco', 'Martin', 'francisco.martin@example.com', 53), ('31054974', 'Nima', 'Kokx', 'nima.kokx@example.com', 41), ('2500690616769 20', 'Lily', 'Hubert', 'lily.hubert@example.com', 73), ('624.832.473-11', 'Valdemar', 'da Luz', 'valdemar.daluz@example.com', 46), ('NaNNA462undefined', 'Alisa', 'Ranta', 'alisa.ranta@example.com', 29), ('727.833.028-66', 'Liliano', 'Gomes', 'liliano.gomes@example.com', 74), ('756.7719.6309.45', 'Victoria', 'Legrand', 'victoria.legrand@example.com', 52), ('374707654', 'Milka', 'Krasić', 'milka.krasic@example.com', 38), ('272-74-0543', 'Penny', 'Alvarez', 'penny.alvarez@example.com', 53), ('2801307T', 'Susanne', 'Montgomery', 'susanne.montgomery@example.com', 70)]\n","[(56.0,)]\n"]}]}]}