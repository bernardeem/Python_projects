{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPoI59SWcNmwwEmLt5zRH8X"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rHZaZZcl3zfI"},"outputs":[],"source":["# Exercise 1:\n","\n","num_1 = int(input('Input a number: '))\n","num_2 = int(input('Input another number: '))\n","sum = num_1 + num_2\n","print(f'The sum of {num_1} plus {num_2} equals {sum}')"]},{"cell_type":"code","source":["# Exercise 2:\n","\n","str_1 = 'Programming '\n","str_2 = 'Python'\n","final_str = str_1 + str_2\n","print(final_str)"],"metadata":{"id":"X42is4nx4X6J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 3:\n","\n","list_1 = [5, 7, 11]\n","print(list_1)"],"metadata":{"id":"yTbhka0Z4qpU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 4:\n","\n","flag = True\n","print(flag, type(flag))"],"metadata":{"id":"_zQXTapu5bCC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 5:\n","\n","salary = float(input('Input your salary: '))\n","new_salary = 1.35 * salary\n","print(f'Your new salary is {new_salary:.2f}')"],"metadata":{"id":"EJyCX3vQ5qHz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 6:\n","\n","list1 = []\n","value1 = float(input('Type a number: '))\n","value2 = float(input('Type another number: '))\n","value3 = float(input('Type the last number: '))\n","list1.extend([value1, value2, value3])\n","print(list1)"],"metadata":{"id":"muNRaRJc6BGZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 7:\n","\n","sum= 1\n","\n","n = int(input('Input a number: '))\n","\n","while sum < n:\n","  sum += 3\n","  print(sum)\n"],"metadata":{"id":"22CFNfj26pHC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 8:\n","\n","sum = 0\n","\n","list_1 = [8.9, 3.5, 5.8, 7.2]\n","for i in list_1:\n","  sum += i\n","\n","grade = sum / len(list_1)\n","print(f\"The student's final grade is {grade}\")"],"metadata":{"id":"vS3x_wL28b76"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 9:\n","\n","total_amount = float(input('Input the amount you want to convert to R$: '))\n","reais_amount = 4.85 * total_amount\n","print(f'{reais_amount:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jvWpBZ8w9Y66","executionInfo":{"status":"ok","timestamp":1691612570141,"user_tz":180,"elapsed":6785,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"48397c2a-daa2-400d-b35a-690ecdbb71bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input the amount you want to convert to R$: 1500\n","7275.00\n"]}]},{"cell_type":"code","source":["# Exercise 10:\n","\n","birth_year = int(input('Input the year you were born: '))\n","aprox_age = 2023 - birth_year\n","\n","print(f'Your age this year is or will be {aprox_age}')"],"metadata":{"id":"Lp1C3FU093FU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 11:\n","\n","x = float(input('Input a number: '))\n","y = float(input('Input another number, different than the one before: '))\n","\n","equation = (x**2 + y**2) / (x-y)**2\n","\n","print(f'{equation:.2f}')"],"metadata":{"id":"H7JKT2je-pfC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 12:\n","\n","password = 'my_password123'\n","\n","login_password = input('Input your password: ')\n","\n","while password != login_password:\n","  login_password = input('Incorrect password! Try again: ')\n","\n","print('Login successful!')"],"metadata":{"id":"e8bS90ig_Sij"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 13:\n","import numpy as np\n","\n","array = np.arange(10)\n","print(array)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ab-R_SZl_7KL","executionInfo":{"status":"ok","timestamp":1691613235735,"user_tz":180,"elapsed":6,"user":{"displayName":"Bernardo Ávila","userId":"17720466755867390545"}},"outputId":"a3400857-6735-495a-e51b-8afd9bf86609"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2 3 4 5 6 7 8 9]\n"]}]},{"cell_type":"code","source":["# Exercise 14:\n","\n","dict = {'rice': 17.30, 'beans': 12.50, 'meat': 23.90, 'lettuce': 3.40}\n","\n","print(dict)"],"metadata":{"id":"kSYBnja_AZsi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 15:\n","\n","dict = {'rice': 17.30, 'beans': 12.50, 'meat': 23.90, 'lettuce': 3.40}\n","\n","dict['meat'] = 25.00\n","dict['lettuce'] = 3.15\n","\n","print(dict)"],"metadata":{"id":"jC3IQ9jIBEV6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 16:\n","\n","x = float(input('Input a number: '))\n","y = float(input('Input another number: '))\n","operation = input('Input the kind of operation you want to make [+, - , *, /]: ').strip()\n","calculate = 0\n","\n","if operation == '+':\n","  calculate = x + y\n","\n","elif operation == '-':\n","  calculate = x - y\n","\n","elif operation == '*':\n","  calculate = x * y\n","\n","elif operation == '/':\n","  calculate = x / y\n","\n","else:\n","  print('Incorrect input. Finishing program...')\n","\n","print(calculate)"],"metadata":{"id":"GCje5q3iBfTb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 17:\n","\n","grade_1 = float(input('Input the first grade: '))\n","grade_2 = float(input('Input the second grade: '))\n","\n","final_grade = (grade_1 + grade_2) / 2\n","\n","if final_grade >= 6:\n","  print('Student approved!')\n","else:\n","  print('Student NOT approved!')\n"],"metadata":{"id":"BZcd-l-pCiDP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 18:\n","\n","number = int(input('Input a number: '))\n","\n","if number // 2 == 0:\n","  print(f'Number {number} is even!')\n","else:\n","  print(f'Number {number} is odd!')"],"metadata":{"id":"rIiwJHvEDAql"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 19:\n","\n","num_1 = float(input('Type one number: '))\n","num_2 = float(input('Type another number: '))\n","\n","if num_1 == num_2:\n","  print('Both numbers are equal!')\n","elif num_1 > num_2:\n","  print(f'{num_1} is bigger than {num_2}')\n","else:\n","  print(f'{num_2} is bigger than {num_1}')\n"],"metadata":{"id":"6VfcHAAyDaYv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 20:\n","\n","list_1 = [1, 23, 4223, 13.90, 192, 198, 10, 23.23]\n","sum = 0\n","\n","for i in list_1:\n","  sum += i\n","\n","print(round(sum, 2))"],"metadata":{"id":"vJLA4X8hEE07"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 21:\n","\n","def is_prime(number):\n","    if number <= 1:\n","        return False\n","    elif number <= 3:\n","        return True\n","    elif number % 2 == 0 or number % 3 == 0:\n","        return False\n","\n","    i = 5\n","    while i * i <= number:\n","        if number % i == 0 or number % (i + 2) == 0:\n","            return False\n","        i += 6\n","\n","    return True\n","\n","def list_first_n_primes(n):\n","    prime_list = []\n","    number = 2\n","    while len(prime_list) < n:\n","        if is_prime(number):\n","            prime_list.append(number)\n","        number += 1\n","    return prime_list\n","\n","\n","prime_numbers = list_first_n_primes(1000)\n","print(prime_numbers)"],"metadata":{"id":"_CYXI0itchcz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 22:\n","\n","def convert_seconds(seconds):\n","    hours = seconds // 3600\n","    remaining_seconds = seconds % 3600\n","    minutes = remaining_seconds // 60\n","    seconds = remaining_seconds % 60\n","    return hours, minutes, seconds\n","\n","\n","total_seconds = int(input(\"Input a number in seconds: \"))\n","hours, minutes, seconds = convert_seconds(total_seconds)\n","print(f\"{total_seconds} secons equal to {hours} hours, {minutes} minutes and {seconds} seconds.\")"],"metadata":{"id":"1vi4KCXjF_fc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Exercise 23\n","\n","from datetime import datetime\n","\n","def calculate_days_lived(birthdate):\n","    today = datetime.now()\n","    days_lived = (today - birthdate).days\n","    return days_lived\n","\n","\n","birthdate_str = input(\"Input the date you were born (YYYY-MM-DD): \")\n","birthdate = datetime.strptime(birthdate_str, '%Y-%m-%d')\n","days_lived = calculate_days_lived(birthdate)\n","print(f\"You have lives {days_lived} days until today.\")"],"metadata":{"id":"s96wF3lSHg2E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# EXERCISE 24:\n","\n","import numpy as np\n","\n","v = np.random.randint(0, 1000, 20)\n","print(f'The vector is {v}')\n","\n","def verify_vector(vector):\n","  listed_values = []\n","\n","  for i in vector:\n","    if i >= 0 and i <= 100:\n","      listed_values.append(i)\n","\n","  for j in listed_values:\n","    most_common = j\n","\n"],"metadata":{"id":"0wf3NXv7lHZW"},"execution_count":null,"outputs":[]}]}